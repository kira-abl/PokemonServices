---
- name: Setup and configure instances
  hosts: all
  become: true
  tasks:
    - name: Update system
      yum:
        name: "*"
        state: latest

    - name: Install Git
      yum:
        name: git
        state: present

    - name: Install Docker
      yum:
        name: docker
        state: present

    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        group: docker
        append: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Clone PokemonServices repository
      git:
        repo: 'https://github.com/kira-abl/PokemonServices'
        dest: '/home/ec2-user/pokemon'
        version: main

    - name: Change ownership of the cloned repository
      file:
        path: /home/ec2-user/pokemon
        owner: ec2-user
        group: ec2-user
        recurse: yes

    - name: Download docker-compose binary
      get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'  # Ensures executable permissions

    - name: Change permissions for docker-compose binary
      file:
        path: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Run docker-compose to build and start the containers on the CRUD instance
      shell: |
        cd /home/ec2-user/pokemon/crud
        sudo docker-compose up -d --build
        sleep 30 
        docker-compose ps
      args:
        chdir: /home/ec2-user/pokemon/crud
      register: docker_compose_result_first
      when: inventory_hostname == "CRUD"
      failed_when: >
        'Up' not in docker_compose_result_first.stdout or
        'Exited' in docker_compose_result_first.stdout


    - name: Run docker-compose to build and start the containers on the Logic API instance
      shell: |
        cd /home/ec2-user/pokemon/logic
        sudo docker-compose up -d --build
        sleep 30 
        docker-compose ps
      args:
        chdir: /home/ec2-user/pokemon/logic
      register: docker_compose_result_second
      environment:
        CRUD_IP: "{{ hostvars['CRUD']['ansible_host'] }}"
      when: inventory_hostname == "logicAPI"
      failed_when: >
        'Up' not in docker_compose_result_second.stdout or
        'Exited' in docker_compose_result_second.stdout

    # Debug for CRUD
    - debug:
        var: docker_compose_result_first
      when: inventory_hostname == "CRUD"

    # Debug for LogicAPI
    - debug:
        var: docker_compose_result_second
      when: inventory_hostname == "logicAPI"
      
